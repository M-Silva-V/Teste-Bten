{"version":3,"sources":["./src/app/pages/signin/signin.service.ts","./src/environments/environment.ts","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/signin/signin.component.ts","./src/app/pages/signin/signin.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/pages/signin/signin.model.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SigninService {\r\n  url: string = `${environment.apiUrl}/api`;\r\n\r\n  constructor() { }\r\n\r\n  public saveUser() {\r\n\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:3010',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit} from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  emailFormControl = new FormControl('', [Validators.required, Validators.email]);\r\n  passwordFormControl = new FormControl('', [Validators.required]);\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <mat-card class=\"example-card\">\r\n    <mat-card-title>Login</mat-card-title>\r\n    <mat-card-content>\r\n      <form class=\"example-form\">\r\n        <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n          <mat-label>Email</mat-label>\r\n          <input type=\"email\" matInput [formControl]=\"emailFormControl\" placeholder=\"Ex. pat@example.com\">\r\n          <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\r\n            Please enter a valid email address!\r\n          </mat-error>\r\n          <mat-error *ngIf=\"emailFormControl.hasError('required')\">\r\n            Email is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n          <mat-label>Senha</mat-label>\r\n          <input type=\"password\" matInput [formControl]=\"passwordFormControl\" placeholder=\"******\">\r\n          <mat-error *ngIf=\"!passwordFormControl.hasError('required')\">\r\n            Please enter a valid password\r\n          </mat-error>\r\n          <mat-error *ngIf=\"emailFormControl.hasError('required')\">\r\n            Senha is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <section>\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button color=\"primary\">Salvar</button>\r\n          </div>\r\n        </section>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n\r\n\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'challenge-bten-front';\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { Chart, registerables } from 'chart.js';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  shouldRun = /(^|.)(stackblitz|webcontainer).(io|com)$/.test(window.location.host);\r\n\r\n  constructor() {\r\n    Chart.register(...registerables);\r\n   }\r\n\r\n  @ViewChild(\"meuCanvas\", { static: true }) elemento : ElementRef;\r\n\r\n  ngOnInit(){\r\n    new Chart(this.elemento.nativeElement, {\r\n      type: 'line',\r\n      data: {\r\n        labels: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\r\n        datasets: [\r\n          {\r\n            data: [85, 72, 86, 81, 84, 86, 94, 60, 62, 65, 41, 58],\r\n            borderColor: \"#00AEFF\",\r\n            fill: false\r\n          },\r\n          {\r\n            data: [33,38,10,93,68,50,35,29,34,2,62,4],\r\n            borderColor: \"#FFCC00\",\r\n            fill: false\r\n          }\r\n        ]\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container class=\"example-container\">\r\n  <mat-sidenav class=\"sidebar\" mode=\"side\" opened>\r\n    <mat-nav-list>\r\n      <mat-list-item class=\"parent\">\r\n        <span class=\"full-width\">Overview</span>\r\n        <mat-icon mat-list-icon>home</mat-icon>\r\n      </mat-list-item>\r\n\r\n      <mat-list-item class=\"parent\">\r\n        <span class=\"full-width\">Tickets</span>\r\n        <mat-icon mat-list-icon>label</mat-icon>\r\n      </mat-list-item>\r\n\r\n      <mat-list-item class=\"parent\">\r\n        <span class=\"full-width\">Ideas</span>\r\n        <mat-icon mat-list-icon>perm_device_information</mat-icon>\r\n      </mat-list-item>\r\n\r\n      <mat-list-item class=\"parent\">\r\n        <span class=\"full-width\">Contacts</span>\r\n        <mat-icon mat-list-icon>account_box</mat-icon>\r\n      </mat-list-item>\r\n    </mat-nav-list>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n\r\n    <div class=\"cards\">\r\n      <mat-card class=\"example-card\">\r\n        <mat-card-title-group>\r\n          <mat-card-title>Unresolved</mat-card-title>\r\n          <mat-card-subtitle>60</mat-card-subtitle>\r\n          <img mat-card-sm-image src=\"https://icon-library.com/images/up-icon/up-icon-0.jpg\" >\r\n        </mat-card-title-group>\r\n      </mat-card>\r\n\r\n      <mat-card class=\"example-card\">\r\n        <mat-card-title-group>\r\n          <mat-card-title>Overdue</mat-card-title>\r\n          <mat-card-subtitle>16</mat-card-subtitle>\r\n          <img mat-card-sm-image src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ5FJbkT29SFKNvbkYj3VEui_4yYg6phqG84A&usqp=CAU\" >\r\n        </mat-card-title-group>\r\n      </mat-card>\r\n\r\n      <mat-card class=\"example-card\">\r\n        <mat-card-title-group>\r\n          <mat-card-title>Open</mat-card-title>\r\n          <mat-card-subtitle>43</mat-card-subtitle>\r\n          <img mat-card-sm-image src=\"https://icon-library.com/images/door-icon-png/door-icon-png-15.jpg\" >\r\n        </mat-card-title-group>\r\n      </mat-card>\r\n\r\n      <mat-card class=\"example-card\">\r\n        <mat-card-title-group>\r\n          <mat-card-title>On hold</mat-card-title>\r\n          <mat-card-subtitle>64</mat-card-subtitle>\r\n          <img mat-card-sm-image src=\"https://icon-library.com/images/social-people-icon/social-people-icon-5.jpg\" >\r\n        </mat-card-title-group>\r\n      </mat-card>\r\n    </div>\r\n\r\n    <div class=\"cards side\">\r\n      <mat-card class=\"graphic-card\">\r\n        <mat-card-title>Today's trends</mat-card-title>\r\n\r\n        <mat-card-content>\r\n          <div>\r\n            <canvas #meuCanvas></canvas>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n      <div class=\"side-cards\">\r\n\r\n        <mat-card class=\"example-card\">\r\n          <mat-card-title-group>\r\n            <mat-card-title>Resolved</mat-card-title>\r\n            <mat-card-subtitle>429</mat-card-subtitle>\r\n          </mat-card-title-group>\r\n        </mat-card>\r\n\r\n        <mat-card class=\"example-card\">\r\n          <mat-card-title-group>\r\n            <mat-card-title>Received</mat-card-title>\r\n            <mat-card-subtitle>426</mat-card-subtitle>\r\n          </mat-card-title-group>\r\n        </mat-card>\r\n\r\n        <mat-card class=\"example-card\">\r\n          <mat-card-title-group>\r\n            <mat-card-title>Average First Response Time</mat-card-title>\r\n            <mat-card-subtitle>33m</mat-card-subtitle>\r\n          </mat-card-title-group>\r\n        </mat-card>\r\n\r\n        <mat-card class=\"example-card\">\r\n          <mat-card-title-group>\r\n            <mat-card-title>Average Response Time</mat-card-title>\r\n            <mat-card-subtitle>3h 8m</mat-card-subtitle>\r\n          </mat-card-title-group>\r\n        </mat-card>\r\n\r\n        <mat-card class=\"example-card\">\r\n          <mat-card-title-group>\r\n            <mat-card-title>Resolution Within SLA</mat-card-title>\r\n            <mat-card-subtitle>94%</mat-card-subtitle>\r\n          </mat-card-title-group>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport {SigninModel} from './signin.model'\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.scss']\r\n})\r\nexport class SigninComponent implements OnInit {\r\n  nameFormControl = new FormControl('', [Validators.required]);\r\n  emailFormControl = new FormControl('', [Validators.required, Validators.email]);\r\n  passwordFormControl = new FormControl('', [Validators.required]);\r\n\r\n  informacao : SigninModel = new SigninModel();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  salvar(){\r\n    console.log('Signin: ', this.informacao);\r\n\r\n    alert('Salvo com sucesso');\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <mat-card class=\"example-card\">\r\n    <mat-card-title>Sign in</mat-card-title>\r\n    <mat-card-content>\r\n      <form class=\"example-form\">\r\n        <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n          <mat-label>Nome</mat-label>\r\n          <input type=\"text\" [(ngModel)]=\"informacao.name\" matInput [formControl]=\"nameFormControl\" placeholder=\"Nome Completo\">\r\n          <mat-error *ngIf=\"!nameFormControl.hasError('required')\">\r\n            Please enter a name complete!\r\n          </mat-error>\r\n          <mat-error *ngIf=\"nameFormControl.hasError('required')\">\r\n            Name is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n          <mat-label>Email</mat-label>\r\n          <input type=\"email\" [(ngModel)]=\"informacao.email\" matInput [formControl]=\"emailFormControl\" placeholder=\"Ex. pat@example.com\">\r\n          <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\r\n            Please enter a valid email address!\r\n          </mat-error>\r\n          <mat-error *ngIf=\"emailFormControl.hasError('required')\">\r\n            Email is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n          <mat-label>Senha</mat-label>\r\n          <input type=\"password\" [(ngModel)]=\"informacao.password\" matInput [formControl]=\"passwordFormControl\" placeholder=\"******\">\r\n          <mat-error *ngIf=\"!passwordFormControl.hasError('required')\">\r\n            Please enter a valid password!\r\n          </mat-error>\r\n          <mat-error *ngIf=\"passwordFormControl.hasError('required')\">\r\n            Senha is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <section>\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button type=\"button\" (click)=\"salvar()\" color=\"primary\">Salvar</button>\r\n          </div>\r\n        </section>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { SigninComponent } from './pages/signin/signin.component';\r\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\r\nimport { SigninService } from './pages/signin/signin.service';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    SigninComponent,\r\n    DashboardComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatMenuModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatIconModule\r\n  ],\r\n  providers: [\r\n    SigninService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\r\nimport { SigninComponent } from './pages/signin/signin.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent },\r\n  { path: 'dashboard', component: DashboardComponent },\r\n  { path: 'signin', component: SigninComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export class SigninModel {\r\n  name: string = '';\r\n  email: string = '';\r\n  password: string = '';\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}